### This is an incomplete rough idea, used for building the bison AST

<program>                   := <statement-list>

<statement-list>            := <statement> ; <statement-list>
                             | <empty>

<statement>                 := import <package> ;
                             | <function-declaration>
                             | <variable-declaration> ;
                             | <variable-declaration> = <expression> ;
                             | <identifier> = <expression> ;
                             | <expression> ;
                             | return <expression> ;
                             | <block>

<reference>                 := <empty>
                             | identifier
                             | package . identifier

<function-declaration>      := function <identifier> ( <function-delcaration-argument-list> ) -> <return-type> <block>

<function-declaration
            -argument-list> := <function-declaration-argument> , <function-declaration-argument-list>
                             | <function-declaration-argument>
                             | <empty>

<function-declartion
                 -argument> := <variable-declaration>

<block>                     := { <statement-list> }

<expression>                := <expression> <binary-operator> <expression>
                             | ( <expression> )
                             | <reference> ( <argument-list> )
                             | <reference>
                             | <literal>

<argument-list>             := <expression> , <argument-list>
                             | <empty>

<variable-declaration>      := <identifier> : <type>

